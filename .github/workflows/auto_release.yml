name: Auto Release
on:
  # pull_request:
  #   branches: ['master', 'liuyuan/*']
  #   paths: ['xpu_graph/version.py']
  #   types: [opened, synchronize, reopened]
  push:
    branches: [ "master", "liuyuan/*" ]
    paths: [ "xpu_graph/version.py" ]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release."
        require: true
        type: string
      desc:
        description: "Descritpion of the release."
        require: true
        type: string
      branch_or_commit:
        description: "branch or commit to be tagged."
        type: string
        defautl: "master"
      make_latest:
        description: "Mark as the latest release."
        type: boolean
        default: false
      generate_notes:
        description: "Generate release notes."
        type: boolean
        default: false
      pre_release:
        description: "Create a pre-release."
        type: boolean
        default: false
  # milestone:
  #   types: [closed]

env:
  XPU_GRAPH_PRIVATE_TOKEN: ${{ secrets.XPU_GRAPH_PRIVATE_TOKEN }}
  BYTED_CLOUD_AICOMPILER_SECRET: ${{ secrets.BYTED_CLOUD_AICOMPILER_SECRET }}
  OAuth2_Client_secret: ${{ secrets.OAuth2_Client_secret }}

defaults:
  run:
    shell: bash
jobs:
  release_automatically:
    if: github.event_name == 'push'
    name: Release
    runs-on: aicompiler
    container:
      image: hub.byted.org/aicompiler/npu.ci.debian12:devel_cann8.2.rc1_py3.11_th26
      volumes:
      - /etc/localtime:/etc/localtime
      options: --privileged=true --ipc=host --pid=host --user root
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: |
        pip3 install "setuptools>=65.5.0" "build>=1.2.2" urllib3
        python3 -m build .
    - name: Release
        # NOTE(liuyuan): Maybe we should use the following instead. Maybe.
        # gh release create $(python3 -c "from xpu_graph.version import __version__;print(__version__)") ./dist/*.whl --latest --generate-notes
      run: |
        python3 .github/workflows/scripts/rest_api.py --artifacts $(ls ./dist/*.whl) --private_token ${XPU_GRAPH_PRIVATE_TOKEN} -desc $(cat docs/RELEASE_CURRENT.md) --generate_notes true --make_latest true
        bash .github/workflows/scripts/upload_to_byted_luban.sh ${BYTED_CLOUD_AICOMPILER_SECRET} ${OAuth2_Client_secret}

  release_manually:
    if: github.event_name == 'workflow_dispatch'
    name: Release
    runs-on: aicompiler
    container:
      image: hub.byted.org/aicompiler/npu.ci.debian12:devel_cann8.2.rc1_py3.11_th26
      volumes:
      - /etc/localtime:/etc/localtime
      options: --privileged=true --ipc=host --pid=host --user root
    env:
      XPU_GRAPH_VERSION: ${{ inputs.version }} # NOTE(liuyuan): specially designed for command sed.
    steps:
    - uses: actions/checkout@v4
    - name: Change Version
      run: |
        sed -E "s|(__version__\s+=\s+).*|\1${XPU_GRAPH_VERSION}|g" xpu_graph/version.py
    - name: Build
      run: |
        pip3 install "setuptools>=65.5.0" "build>=1.2.2" urllib3
        python3 -m build .
    - name: Release
      run: |
        DESC="${{ inputs.desc }}"
        if [[ -z ${DESC} ]]
        then
          DESC=$(cat docs/RELEASE_CURRENT.md)
        fi
        python3 .github/workflows/scripts/rest_api.py --tag_name ${{ inputs.version }} --branch_or_commit ${{ inputs.branch_or_commit }} --desc "${DESC}" --artifacts $(ls ./dist/*.whl) --private_token ${XPU_GRAPH_PRIVATE_TOKEN} --generate_notes ${{ inputs.generate_notes }} --make_latest ${{ inputs.make_latest }} --pre_release ${{ inputs.pre_release }}
        bash .github/workflows/scripts/upload_to_byted_luban.sh ${BYTED_CLOUD_AICOMPILER_SECRET} ${OAuth2_Client_secret}
